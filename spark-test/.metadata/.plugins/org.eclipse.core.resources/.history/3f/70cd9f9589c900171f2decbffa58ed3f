package Mi_Rubro

import org.apache.spark._
import org.apache.spark.SparkContext._
import org.apache.spark.rdd.RDD
import org.apache.spark.sql.types._
import org.apache.spark.sql._
import org.apache.spark.sql.functions._

object General_Procedencia {
  
  /*
   * 17 => RUC
   * 6 => CODESTABLECIMIENTO
   * 12 => MTOTRANSACCION
   * 14 => CODCLAVECIC_CLIENTE
   * 25 => CODMES
   * 43 => SEXO_CLIENTE
   * 46 => RANGO_SUELDO
   * 47 => TIPUSODIGITAL
   * 48 => DESTIPUSODIGITAL
   * 57 => RANGO_EDAD
   */
  
  var sc = new SparkContext("local[*]", "General_Procedencia")

  var hiveContext = new org.apache.spark.sql.hive.HiveContext(sc)
  var tablonDF = hiveContext.sql("SELECT * FROM LONDON_SMART.TABLON where codmes >= 201701 and codmes <= 201702")
  
  def montoPromedio(esta: List[String], inicio: String, fin: String, conceptos: List[String]): DataFrame = {

    val concepto1 = conceptos(0)

    return tablonDF.filter((tablonDF("CODESTABLECIMIENTO") isin (esta: _*)) && (!tablonDF(concepto1).equalTo("null"))
      && (tablonDF("CODMES").between(inicio, fin)))
      .groupBy("CODMES", concepto1)
      .agg(avg("MTOTRANSACCION").as("MONTO_PROMEDIO"))
      .orderBy("CODMES", concepto1)

  }
  
  
  def main(args:Array[String]) {
    
    montoPromedio(List("100070934", "100070905"), "201501", "201506", List("SEXO_CLIENTE")).show()
    
  }
  
}